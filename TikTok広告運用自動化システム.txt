TikTok広告運用自動化システム 要件定義 v1.0
最終更新日: 2025-10-04（JST）
________________


1. 目的・背景
* 目的: 広告運用の属人性を排除し、誰でもTikTok広告を最適運用できる環境を提供する。

* 狙い: ①設定作業の自動化、②予算配分・改善サイクルの自動実行、③AIによる常時最適化で「枯れない広告運用」を実現。

* 対象範囲: TikTok Ads（Auction型、アプリ/WEB、国内外アカウント）。将来拡張で他媒体へ拡張可能な設計。

________________


2. ステークホルダー
   * ビジネス: マーケ責任者、事業責任者、ブランド担当

   * 運用: メディアプランナー、広告運用者

   * 技術: プロダクトマネージャー、MLエンジニア、バックエンド/フロントエンド、SRE、データ基盤

   * 外部: 代理店、クリエイター、TikTok Ads API 提供元

________________


3. 成功指標（KGI/KPI）
      * KGI: 獲得単価（CPA/CPI/CAC）またはROASの目標達成率、媒体横断比較での効率指標の上位維持

      * 主要KPI

         * 自動作成キャンペーン比率（>90%）

         * 目標達成キャンペーン比率（例: 70%以上）

         * 最適化サイクルの平均実行間隔（例: ≤ 2時間）

         * 配信停止/逸脱の自動検知から復旧までのMTTR（例: ≤ 15分）

         * クリエイティブテストのサイクル数/週（例: ≥ 10）

________________


4. 用語定義
            * CR: クリエイティブ（動画/静止画/テキスト）

            * 最適化サイクル: データ収集→評価→意思決定→実行→学習更新

            * ポリシー: 予算上限・入札上限・ブランドセーフティ等の運用ガードレール

________________


5. スコープ
5.1 In-Scope
               1. CR投入〜配信設定の半自動化

               2. 自動予算配分（ポートフォリオ/キャンペーン/アドグループ）

               3. 自動入札/上限/ペーシング制御

               4. クリエイティブテスト（多腕バンディット＋A/B）

               5. アラート/異常検知/自動復旧

               6. AI最適化（目標関数学習、ルックアライク、テキスト/動画改善提案）

               7. レポーティング/ダッシュボード/監査ログ

               8. ガバナンス（権限、ポリシー、承認フロー）

5.2 Out-of-Scope（初期）
                  * オフライン計測の自動インポート（v2以降）

                  * マルチ媒体横断の自動最適化（v2以降）

________________


6. ユースケース
                     1. CR投入: ユーザーが動画ファイル/URLを登録→自動で仕様検証・派生生成（尺/比率/キャプション）→下書き配信案を生成

                     2. 自動配信設定: 目標（CPA/ROAS/Install）を選択→推奨キャンペーン構成・入札・配信時間を提示→ワンクリック作成

                     3. 最適化: 2時間ごとに学習・低パフォーマCRの停止/予算再配分→上限遵守

                     4. アラート: CPA逸脱、学習停滞、審査落ち、在庫不足を検知→自動/半自動アクション

                     5. レポート: KPIハイライト、改善履歴、実験結果の可視化

________________


7. 機能要件（FR）
FR-1 クリエイティブ管理
                        * CRアップロード（MP4/MOV/静止画）、メタ情報抽出（尺、サイズ、音声、テキスト）

                        * 自動バリエーション生成（サムネ、CTAテキスト、字幕、比率変換）※生成AIの安全フィルタ必須

                        * クリエイティブ評価指標（初動CTR/Hook率/完視聴率/コンバージョン貢献）

FR-2 キャンペーン自動作成
                           * 目標/KPI/予算/期間/地域/配信時間/年齢等のテンプレ化

                           * ルールベース＋推奨ロジックでの構成案生成

                           * 承認ワークフロー（下書き→承認→作成）

FR-3 予算配分・入札最適化
                              * 日次/月次上限、ポートフォリオ最適化（キャンペーン横断）

                              * ペーシング制御（過/未消化の補正）

                              * 入札戦略：tCPA/tROAS/最低コスト/上限入札の自動切替（API許す範囲）

                              * クリエイティブ/オーディエンス別の重み学習

FR-4 実験フレームワーク
                                 * A/B、MAB（ε-greedy/UCB/Thompson）

                                 * トライアル期間・最小検出効果・サンプルサイズ計算の組込

                                 * 途中停止基準（倫理/統計）

FR-5 異常検知・アラート・自動復旧
                                    * 指標逸脱、データ欠損、API失敗、審査落ち、在庫変動

                                    * アクション：一時停止、予算移管、リトライ、ロールバック

                                    * 通知：Slack/Email/Teams、Webhooks

FR-6 AI最適化
                                       * 目標関数学習（階層ベイズ/勾配ブースティング/オンライン学習）

                                       * クリエイティブ提案（フック/CTA/字幕改善案）

                                       * オーディエンスセグメント自動クラスタリング

                                       * 反実仮想（What-if）シミュレーション

FR-7 レポーティング/可視化
                                          * ダッシュボード（KGI/KPI、漏斗、LTV、媒体比較）

                                          * 実験結果サマリ、改善履歴、変更差分ログ

                                          * エクスポート（CSV/Excel/Looker連携）

FR-8 ガバナンス/権限/監査
                                             * RBAC（閲覧/編集/承認/管理）

                                             * 承認フロー（2段階承認可）

                                             * 監査ログ（誰がいつ何を変更したか）

                                             * マルチアカウント隔離（テナント）

FR-9 連携/インテグレーション
                                                * TikTok Ads API（認証、レート制御、Webhook）

                                                * 計測：MMP（AppsFlyer/Adjust）、GA4、サーバーイベント

                                                * 社内DWH（BigQuery等）/CDP（顧客属性・LTV）

                                                * コラボ：Slack/Teams/Jira（アラート→チケット）

________________


8. 非機能要件（NFR）
                                                   * 可用性: 99.9%（主要最適化ジョブは冗長化）

                                                   * パフォーマンス: 最適化サイクル実行 ≤ 5分/キャンペーン100件当たり

                                                   * スケーラビリティ: 1,000+キャンペーン、CR 1万点規模

                                                   * セキュリティ: OAuth2、SCIM対応、KMS、暗号化（At-Rest/In-Transit）、秘密管理

                                                   * コンプライアンス: 個人情報/広告識別子の取り扱い、同意管理、地域法令（GDPR/CCPA等）

                                                   * 信頼性: ロールバック、Idempotency、レート制限耐性

                                                   * 可観測性: Logs/Metrics/Traces、SLO/SLI、アラート

                                                   * 運用性: Blue/Green、Feature Flags、Runbook、オンコール体制

________________


9. システムアーキテクチャ（概略）
                                                      * フロントエンド: Web（React/Next）、認可（RBAC）、ダッシュボード

                                                      * BFF/API: GraphQL/REST、認可、入力検証

                                                      * 最適化エンジン: ルールエンジン＋オンライン学習（バンディット/勾配系）

                                                      * ジョブ基盤: スケジューラ（Cron/Workflow）、キュー（Pub/Sub）

                                                      * コネクタ: TikTok Ads API クライアント、MMP/GA4、Webhook受信

                                                      * データ基盤: DWH（BigQuery等）、Feature Store、モデルレジストリ

                                                      * 監査/設定: ポリシーストア、監査ログDB

________________


10. データモデル（要約）
                                                         * Creative(id, meta, variants, status)

                                                         * Campaign/AdGroup/Ad(hierarchy, goal, budget, bid, pacing)

                                                         * Audience(segments, lookalike, exclusion)

                                                         * Metrics(impr, click, cv, cost, revenue, view_rate, hook_rate)

                                                         * Experiment(design, arm, traffic_split, result)

                                                         * Policy(constraints, approval)

                                                         * ChangeLog(actor, action, before/after, timestamp)

________________


11. ワークフロー（例）
                                                            1. CR登録→仕様検証→自動派生生成→品質スコア付与

                                                            2. 配信設計→推奨案生成→承認→API作成

                                                            3. 最適化（2h周期）→評価→予算再配分/入札調整→変更記録

                                                            4. アラート→自動復旧/承認要請→Runbook実行

                                                            5. レポート→KPI・実験結果配信（メール/Slack）

________________


12. ポリシー/ガードレール
                                                               * 予算上限・下限、デイリーバーンレートの範囲

                                                               * 入札上限、学習期の最低配信量、過学習防止

                                                               * ブランドセーフティ（NGワード/カテゴリ）

                                                               * 審査落ち・配信制限時の自動対処

________________


13. アルゴリズム設計（概要）
                                                                  * 配分: Thompson Sampling＋ペーシング補正、階層事前分布でCR/セグメント間移転学習

                                                                  * 入札: 目標関数をCVR×LTV/Costで近似、勾配探索＋安全制約（予算/上限）

                                                                  * シミュレーション: 潜在効果推定（DID/傾向スコア）でWhat-if評価

                                                                  * 停止基準: Bayesian Stop（後悔最小化）、Safety Gate（逸脱閾値）

________________


14. 監視・アラート
                                                                     * SLI/SLO: ①最適化ジョブ成功率、②APIエラー率、③遅延、④レポート鮮度

                                                                     * アラート閾値・抑制（ナイトモード/JST）

                                                                     * ヘルスチェック（依存先API、認証有効期限）

________________


15. 権限・監査
                                                                        * シングルサインオン（SSO）

                                                                        * ロール：Viewer/Operator/Approver/Admin

                                                                        * 監査証跡エクスポート、改ざん防止

________________


16. セキュリティ/プライバシー
                                                                           * 最小権限原則、キー自動ローテーション

                                                                           * PII/ADIDのマスキング、保持期間、削除フロー

                                                                           * 生成AIの安全設計（プロンプト注入対策、出力フィルタ）

________________


17. 品質保証/テスト
                                                                              * ユニット/統合/E2E、サンドボックス環境

                                                                              * オフライン再現テスト（リプレイ）、A/Aテスト

                                                                              * シャドー配信→カナリアリリース→段階展開

________________


18. ロードマップ（例）
                                                                                 * Phase 0（0-1ヶ月）: PoC（手動連携、基本ダッシュボード）

                                                                                 * Phase 1（2-3ヶ月）: 自動作成・基本最適化・アラート

                                                                                 * Phase 2（4-6ヶ月）: 実験フレーム、AI提案、MMP連携

                                                                                 * Phase 3（7-9ヶ月）: ポートフォリオ最適化、What-if、SLO整備

________________


19. 受け入れ基準（例）
                                                                                    * 10件以上のキャンペーンで自動作成成功率95%+

                                                                                    * 連続30日、最適化サイクル停止ゼロ（SLO内）

                                                                                    * 基準期間比でCPA 10%以上改善（同条件）

                                                                                    * 重大障害からの自動復旧 MTTR ≤ 15分

________________


20. リスクと対策
                                                                                       * API仕様変更 → バージョン抽象化/契約テスト

                                                                                       * データ欠損/遅延 → 監視＋補完、遅延耐性の推論

                                                                                       * 過学習/探索不足 → 探索率下限、冷スタート戦略

                                                                                       * ガバナンス不備 → 承認ゲート、権限分離

________________


21. 運用/サポート
                                                                                          * Runbook（一般障害/審査落ち/規約変更対応）

                                                                                          * インシデント管理（優先度/コミュニケーション）

                                                                                          * 変更管理（CAB/リリースノート）

________________


22. 付録
                                                                                             * 想定ダッシュボード: KPIカード、クリエイティブTop/Flop、学習ログ、アラート履歴

                                                                                             * 設定テンプレ: 目標別プリセット（tCPA/tROAS/最低コスト）

                                                                                             * APIコール上限戦略: バッチング、指数バックオフ、Idempotency